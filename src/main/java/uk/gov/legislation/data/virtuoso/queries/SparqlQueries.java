package uk.gov.legislation.data.virtuoso.queries;import org.springframework.stereotype.Component;import uk.gov.legislation.data.virtuoso.JsonResults;import uk.gov.legislation.data.virtuoso.Virtuoso;import uk.gov.legislation.data.virtuoso.model.Resources;import java.io.IOException;@Componentpublic class SparqlQueries {private final Virtuoso virtuoso;    public SparqlQueries(Virtuoso virtuoso) {        this.virtuoso = virtuoso;    }    /**     * Constructs SPARQL query to fetch JSON results for metadata Item List.     */    public JsonResults getJsonListOfMetadata(String type, int year, int limit, int offset) throws IOException, InterruptedException {        String query = """                 PREFIX leg: <http://www.legislation.gov.uk/def/legislation/>                 SELECT * {                 ?item a [leg:acronym '%s'] ;                 leg:year %d ;                 leg:year ?year ;                 leg:title ?title ;                 leg:number ?number ;                 leg:citation ?cite .                 }                 ORDER BY DESC(?number)                 LIMIT %d                 OFFSET %d                              """.formatted(type, year,limit, offset);        return virtuoso.query(query);    }    /**     * Query for getting single Metadata Item     */    public JsonResults getJsonMetadata(String type, int year, int number) throws IOException, InterruptedException {        String query = """            PREFIX leg: <http://www.legislation.gov.uk/def/legislation/>            SELECT ?s ?p ?o            WHERE {               GRAPH ?g {                  <http://www.legislation.gov.uk/id/%s/%s/%d> a leg:Item .                  ?s ?p ?o               }            }            """.formatted(type, year, number);        return virtuoso.query(query);    }    /**     * Query for getting Class Information     */    public String getClassData(String type, String format) throws IOException, InterruptedException {        String query = """                SELECT ?s ?p ?o                WHERE {                   BIND(<%s%s> AS ?s)                   ?s ?p ?o                }            """.formatted(Resources.Leg.Prefix, type);        return virtuoso.query(query, format);    }}